{% extends "layout.jinja" %}

{% block container %}

      <div id="pos">
        <p class="row form-inline tower-filter">
          <strong>Filters</strong>
          <span class="offset1">
            <input id="region" type="text" placeholder="Region" />
            <input id="celestial" type="text" placeholder="Moon" />
          </span>
          <span class="span2 pull-right">
            <button type="button" id="showAll" class="btn btn-primary"
                data-toggle="button">Toggle Outdated</button>
          </span>
        </p>

        <div id="pos_overview">

        <table class="table table-bordered table-condensed">
          <thead>
            <tr>
              <th>ID</th>
              <th>State</th>
              <th>Tower</th>
              <th>Region</th>
              <th>Moon</th>
              <th>Offline at</th>
              <th>Offline in</th>
            </tr>
          </thead>
          <tbody>
          </tbody>
        </table>

        </div>
      </div>

{% endblock %}

{% block script %}

    var towers = [];
    var regions = [];
    var filterRegion = null;
    var filterCelestial = null;
    var celestials = [];

    $(document).ready(function() {
        var host = '{{ g.json_root }}';

        $.get(host + '/tower', function(data) {
            if (data.error) {
                // XXX proper error messaging
                // alert(data.error)
                return null;
            }

            towers = data.towers;
            _populateTowers(false);
            $('#showAll').bind('click', function() {
                var showAll = (!$('#showAll').hasClass('active'));
                _populateTowers(showAll);
            });
        });
    });

    function populateTowers() {
        var showAll = ($('#showAll').hasClass('active'));
        _populateTowers(showAll);
    }

    function _populateTowers(showAll) {
        var values = [];
        regions = [];
        celestials = [];

        for (var key in towers) {
            var item = towers[key];
            var value = [
                item.id,
                item.stateName,
                item.typeName,
                item.regionName,
                item.celestialName,
                item.offlineAtFormatted,
                {
                    'col_value': item.timeRemainingFormatted,
                    'value': item.timeRemaining
                }
            ];
            if ((item.apiTimestamp != null) || showAll) {
                if (regions.indexOf(item.regionName) < 0) {
                    regions.push(item.regionName);
                }
                if (celestials.indexOf(item.celestialName) < 0) {
                    celestials.push(item.celestialName);
                }
                if ((item.regionName.toLowerCase().indexOf(
                            $('#region').val().toLowerCase()) > -1) &&
                        (item.celestialName.toLowerCase().indexOf(
                            $('#celestial').val().toLowerCase()) > -1)) {
                    values.push(value);
                }
            }
        }

        regions.sort();
        celestials.sort();

        $('#pos_overview').TidyTable({
            enableCheckbox : false,
            enableMenu     : false,
            tableClass     : "table table-bordered table-condensed"
        },
        {
            columnTitles : [
                'ID', 'State', 'Tower', 'Region', 'Moon', 'Offline at',
                'Offline in'],
            columnValues : values,

            // do something with selected rows
            menuOptions : [
                ['Option 1', { callback : doSomething1 }],
                ['Option 2', { callback : doSomething2 }]
            ]
        }, doSomething3);

        $('#region').typeahead({
            source: regions,
            updater: function(item) {
                filterRegion = item;
                populateTowers();
                return item;
            }
        });

        $('#celestial').typeahead({
            source: celestials,
            updater: function(item) {
                filterCelestial = item;
                populateTowers();
                return item;
            }
        });

        $('#region').keyup(function() {
            hookPopulateTowers('#region', 250)
        });
        $('#celestial').keyup(function() {
            hookPopulateTowers('#celestial', 250)
        });

    }

    function hookPopulateTowers(target, delay) {
        var value = $(target).val();
        setTimeout(function() {
            if ($(target).val() == value)
            {
                populateTowers()
            }
        }, delay);
    }

    // do something with selected results
    function doSomething1(rows) {
        alert('callback1(rows=' + rows.length + "')");
    }

    function doSomething2(rows) {
        alert('callback2(rows=' + rows.length + "')");
    }

    function doSomething3(name, value) {
        window.location.href = '{{ request.script_root }}/tower/' + name;
        //alert("callback(name='" + name + "', value='" + value + "')");
    }

{% endblock %}
