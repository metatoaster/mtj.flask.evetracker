{% extends "layout.jinja" %}

{% block container %}

      <h1>Tower Details</h1>

      <div class="row">

        <div class="span6" id="tower_info">
          <table class="table table-bordered table-condensed">
            <thead>
              <tr>
                <th>Overview</th>
                <th>Value</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>

        <div class="span6" id="fuel_info">
          <table class="table table-bordered table-condensed">
            <thead>
              <tr>
                <th>Fuel</th>
                <th>Delta</th>
                <th>Value</th>
                <th>Optimal</th>
                <th>Difference</th>
                <th>Time Remaining</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>

      </div>

      <div class="row">

        <div class="span4" id="tower_log">
          <table class="table table-bordered table-condensed">
            <thead>
              <tr>
                <th>State</th>
                <th>Timestamp</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>

        <div class="span8" id="fuel_log">
          <table class="table table-bordered table-condensed">
            <thead>
              <tr>
                <th>Fuel</th>
                <th>Delta</th>
                <th>Value</th>
                <th>Timestamp</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>

      </div>

{% endblock %}

{% block script %}

    $(document).ready(function() {
        var host = '{{ g.json_root }}';

        $.get(host + '/tower/{{ g.tower_id }}', function(data) {
            if (data.error) {
                // XXX proper error messaging
                populateTable([data.error]);
                return null;
            }

            var tower = data.tower;
            populateTower([
                ['Celestial', tower.celestialName],
                ['Region', tower.regionName],
                ['Tower Type', tower.typeName],
                ['Online Since', tower.onlineSinceFormatted],
                ['Offline At', tower.offlineAtFormatted],
                ['State', tower.stateName],
                ['Reinforcement', tower.reinforcementLengthFormatted],
                ['Time Remaining', tower.timeRemainingFormatted]
            ]);

            var fuels = [];
            var fuel = data.fuel;
            for (var key in fuel) {
                var item = fuel[key];
                var value = [
                    // string casting to work around sort.
                    item.fuelName,
                    item.delta + '',
                    item.value + '',
                    item.optimalValue + '',
                    item.missingValue + '',
                    'N/A'
                ];
                fuels.push(value);
            }
            populateFuel(fuels);

            var tower_logs = [];
            var tower_log = data.tower_log;
            for (var key in tower_log) {
                var item = tower_log[key];
                var value = [
                    // string casting to work around sort.
                    item.stateName,
                    item.timestampFormatted
                ];
                tower_logs.push(value);
            }
            populateTowerLog(tower_logs);

            var fuel_logs = [];
            var fuel_log = data.fuel_log;
            for (var key in fuel_log) {
                var item = fuel_log[key];
                var value = [
                    // string casting to work around sort.
                    item.fuelName,
                    item.delta + '',
                    item.value + '',
                    item.timestampFormatted
                ];
                fuel_logs.push(value);
            }
            populateFuelLog(fuel_logs);

        });
    });

    function populateTower(values) {
        populateDataTable('#tower_info', ['Overview'], values);
    }

    function populateFuel(values) {
        populateTable('#fuel_info',
            ['Fuel', 'Delta', 'Value', 'Optimal', 'Difference', 'Time'],
            values);
    }

    function populateFuelLog(values) {
        populateTable('#fuel_log',
            ['Fuel', 'Delta', 'Value', 'Timestamp'],
            values);
    }

    function populateTowerLog(values) {
        populateTable('#tower_log',
            ['State', 'Timestamp'],
            values);
    }

    function populateTable(table_id, titles, values) {
        $(table_id).TidyTable({
            enableCheckbox : false,
            enableMenu     : false,
            tableClass     : "table table-bordered table-condensed"
        },
        {
            columnTitles : titles,
            columnValues : values
        });
    }

    function populateDataTable(table_id, titles, values) {
        $(table_id).TidyTable({
            enableCheckbox : false,
            enableMenu     : false,
            enableSort     : false,
            firstColspan   : 2,
            tableClass     : "table table-bordered table-condensed"
        },
        {
            columnTitles : titles,
            columnValues : values,
        });
    }

{% endblock %}
